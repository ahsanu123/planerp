// This file is auto-generated by @hey-api/openapi-ts

import {
  createClient,
  createConfig,
  type OptionsLegacyParser,
} from "@hey-api/client-fetch";
import type {
  GetUserManagerSignInData,
  GetUserManagerSignInError,
  GetUserManagerSignInResponse,
  GetUserManagerSignOutError,
  GetUserManagerSignOutResponse,
  PostUserManagerCreateUserData,
  PostUserManagerCreateUserError,
  PostUserManagerCreateUserResponse,
  GetUserManagerGetUserData,
  GetUserManagerGetUserError,
  GetUserManagerGetUserResponse,
  GetUserManagerSeedError,
  GetUserManagerSeedResponse,
} from "./types.gen";

export const client = createClient(createConfig());

export class UserManagerService {
  public static getUserManagerSignIn<ThrowOnError extends boolean = false>(
    options?: OptionsLegacyParser<GetUserManagerSignInData, ThrowOnError>
  ) {
    return (options?.client ?? client).get<
      GetUserManagerSignInResponse,
      GetUserManagerSignInError,
      ThrowOnError
    >({
      ...options,
      url: "/UserManager/sign-in",
    });
  }

  public static getUserManagerSignOut<ThrowOnError extends boolean = false>(
    options?: OptionsLegacyParser<unknown, ThrowOnError>
  ) {
    return (options?.client ?? client).get<
      GetUserManagerSignOutResponse,
      GetUserManagerSignOutError,
      ThrowOnError
    >({
      ...options,
      url: "/UserManager/sign-out",
    });
  }

  public static postUserManagerCreateUser<ThrowOnError extends boolean = false>(
    options?: OptionsLegacyParser<PostUserManagerCreateUserData, ThrowOnError>
  ) {
    return (options?.client ?? client).post<
      PostUserManagerCreateUserResponse,
      PostUserManagerCreateUserError,
      ThrowOnError
    >({
      ...options,
      url: "/UserManager/create-user",
    });
  }

  public static getUserManagerGetUser<ThrowOnError extends boolean = false>(
    options?: OptionsLegacyParser<GetUserManagerGetUserData, ThrowOnError>
  ) {
    return (options?.client ?? client).get<
      GetUserManagerGetUserResponse,
      GetUserManagerGetUserError,
      ThrowOnError
    >({
      ...options,
      url: "/UserManager/get-user",
    });
  }

  public static getUserManagerSeed<ThrowOnError extends boolean = false>(
    options?: OptionsLegacyParser<unknown, ThrowOnError>
  ) {
    return (options?.client ?? client).get<
      GetUserManagerSeedResponse,
      GetUserManagerSeedError,
      ThrowOnError
    >({
      ...options,
      url: "/UserManager/seed",
    });
  }
}

// This file is auto-generated by @hey-api/openapi-ts

import {
  createClient,
  createConfig,
  type OptionsLegacyParser,
} from "@hey-api/client-fetch";
import type {
  GetAccountExternalLoginData,
  GetAccountExternalLoginError,
  GetAccountExternalLoginResponse,
  GetAccountExternalLoginCallbackData,
  GetAccountExternalLoginCallbackError,
  GetAccountExternalLoginCallbackResponse,
  PostCampaignCreateCampaignData,
  PostCampaignCreateCampaignError,
  PostCampaignCreateCampaignResponse,
  PostCampaignUpdateCampaignData,
  PostCampaignUpdateCampaignError,
  PostCampaignUpdateCampaignResponse,
  GetCampaignCampaignsError,
  GetCampaignCampaignsResponse,
  PostIdentityAccountRegisterData,
  PostIdentityAccountRegisterError,
  PostIdentityAccountRegisterResponse,
  PostIdentityAccountLoginData,
  PostIdentityAccountLoginError,
  PostIdentityAccountLoginResponse,
  PostIdentityAccountRefreshData,
  PostIdentityAccountRefreshError,
  PostIdentityAccountRefreshResponse,
  MapIdentityApiIdentityAccountConfirmEmailData,
  MapIdentityApiIdentityAccountConfirmEmailError,
  MapIdentityApiIdentityAccountConfirmEmailResponse,
  PostIdentityAccountResendConfirmationEmailData,
  PostIdentityAccountResendConfirmationEmailError,
  PostIdentityAccountResendConfirmationEmailResponse,
  PostIdentityAccountForgotPasswordData,
  PostIdentityAccountForgotPasswordError,
  PostIdentityAccountForgotPasswordResponse,
  PostIdentityAccountResetPasswordData,
  PostIdentityAccountResetPasswordError,
  PostIdentityAccountResetPasswordResponse,
  PostIdentityAccountManage2FaData,
  PostIdentityAccountManage2FaError,
  PostIdentityAccountManage2FaResponse,
  GetIdentityAccountManageInfoError,
  GetIdentityAccountManageInfoResponse,
  PostIdentityAccountManageInfoData,
  PostIdentityAccountManageInfoError,
  PostIdentityAccountManageInfoResponse,
  PostRoleManagerAddRoleForEmailByEmailData,
  PostRoleManagerAddRoleForEmailByEmailError,
  PostRoleManagerAddRoleForEmailByEmailResponse,
  PostRoleManagerAddRoleForUserByUserNameData,
  PostRoleManagerAddRoleForUserByUserNameError,
  PostRoleManagerAddRoleForUserByUserNameResponse,
  PostRoleManagerCreateRoleData,
  PostRoleManagerCreateRoleError,
  PostRoleManagerCreateRoleResponse,
  GetRoleManagerGetRolesError,
  GetRoleManagerGetRolesResponse,
  GetRoleManagerGetRoleForEmailByEmailData,
  GetRoleManagerGetRoleForEmailByEmailError,
  GetRoleManagerGetRoleForEmailByEmailResponse,
  GetRoleManagerGetRoleForUserByUserNameData,
  GetRoleManagerGetRoleForUserByUserNameError,
  GetRoleManagerGetRoleForUserByUserNameResponse,
  GetRoleManagerIsUserInRoleData,
  GetRoleManagerIsUserInRoleError,
  GetRoleManagerIsUserInRoleResponse,
  GetRoleManagerGetUserForRoleData,
  GetRoleManagerGetUserForRoleError,
  GetRoleManagerGetUserForRoleResponse,
  PostRoleManagerRemoveRoleForUserByUserNameData,
  PostRoleManagerRemoveRoleForUserByUserNameError,
  PostRoleManagerRemoveRoleForUserByUserNameResponse,
  GetUserInfoWhoAmIError,
  GetUserInfoWhoAmIResponse,
  PostUserManagerUserDetailData,
  PostUserManagerUserDetailError,
  PostUserManagerUserDetailResponse,
  PostUserManagerCreateUserData,
  PostUserManagerCreateUserError,
  PostUserManagerCreateUserResponse,
  GetUserManagerListUsersError,
  GetUserManagerListUsersResponse,
  PostUserManagerUpdateUserData,
  PostUserManagerUpdateUserError,
  PostUserManagerUpdateUserResponse,
  DeleteUserManagerDeleteUserData,
  DeleteUserManagerDeleteUserError,
  DeleteUserManagerDeleteUserResponse,
  GetUserManagerSignOutError,
  GetUserManagerSignOutResponse,
} from "./types.gen";

export const client = createClient(createConfig());

export class AccountService {
  public static getAccountExternalLogin<ThrowOnError extends boolean = false>(
    options?: OptionsLegacyParser<GetAccountExternalLoginData, ThrowOnError>
  ) {
    return (options?.client ?? client).get<
      GetAccountExternalLoginResponse,
      GetAccountExternalLoginError,
      ThrowOnError
    >({
      ...options,
      url: "/Account/ExternalLogin",
    });
  }

  public static getAccountExternalLoginCallback<
    ThrowOnError extends boolean = false
  >(
    options?: OptionsLegacyParser<
      GetAccountExternalLoginCallbackData,
      ThrowOnError
    >
  ) {
    return (options?.client ?? client).get<
      GetAccountExternalLoginCallbackResponse,
      GetAccountExternalLoginCallbackError,
      ThrowOnError
    >({
      ...options,
      url: "/Account/ExternalLoginCallback",
    });
  }
}

export class CampaignService {
  public static postCampaignCreateCampaign<
    ThrowOnError extends boolean = false
  >(
    options?: OptionsLegacyParser<PostCampaignCreateCampaignData, ThrowOnError>
  ) {
    return (options?.client ?? client).post<
      PostCampaignCreateCampaignResponse,
      PostCampaignCreateCampaignError,
      ThrowOnError
    >({
      ...options,
      url: "/Campaign/create-campaign",
    });
  }

  public static postCampaignUpdateCampaign<
    ThrowOnError extends boolean = false
  >(
    options?: OptionsLegacyParser<PostCampaignUpdateCampaignData, ThrowOnError>
  ) {
    return (options?.client ?? client).post<
      PostCampaignUpdateCampaignResponse,
      PostCampaignUpdateCampaignError,
      ThrowOnError
    >({
      ...options,
      url: "/Campaign/update-campaign",
    });
  }

  public static getCampaignCampaigns<ThrowOnError extends boolean = false>(
    options?: OptionsLegacyParser<unknown, ThrowOnError>
  ) {
    return (options?.client ?? client).get<
      GetCampaignCampaignsResponse,
      GetCampaignCampaignsError,
      ThrowOnError
    >({
      ...options,
      url: "/Campaign/campaigns",
    });
  }
}

export class LearnAuthService {
  public static postIdentityAccountRegister<
    ThrowOnError extends boolean = false
  >(
    options?: OptionsLegacyParser<PostIdentityAccountRegisterData, ThrowOnError>
  ) {
    return (options?.client ?? client).post<
      PostIdentityAccountRegisterResponse,
      PostIdentityAccountRegisterError,
      ThrowOnError
    >({
      ...options,
      url: "/IdentityAccount/register",
    });
  }

  public static postIdentityAccountLogin<ThrowOnError extends boolean = false>(
    options?: OptionsLegacyParser<PostIdentityAccountLoginData, ThrowOnError>
  ) {
    return (options?.client ?? client).post<
      PostIdentityAccountLoginResponse,
      PostIdentityAccountLoginError,
      ThrowOnError
    >({
      ...options,
      url: "/IdentityAccount/login",
    });
  }

  public static postIdentityAccountRefresh<
    ThrowOnError extends boolean = false
  >(
    options?: OptionsLegacyParser<PostIdentityAccountRefreshData, ThrowOnError>
  ) {
    return (options?.client ?? client).post<
      PostIdentityAccountRefreshResponse,
      PostIdentityAccountRefreshError,
      ThrowOnError
    >({
      ...options,
      url: "/IdentityAccount/refresh",
    });
  }

  public static mapIdentityApiIdentityAccountConfirmEmail<
    ThrowOnError extends boolean = false
  >(
    options?: OptionsLegacyParser<
      MapIdentityApiIdentityAccountConfirmEmailData,
      ThrowOnError
    >
  ) {
    return (options?.client ?? client).get<
      MapIdentityApiIdentityAccountConfirmEmailResponse,
      MapIdentityApiIdentityAccountConfirmEmailError,
      ThrowOnError
    >({
      ...options,
      url: "/IdentityAccount/confirmEmail",
    });
  }

  public static postIdentityAccountResendConfirmationEmail<
    ThrowOnError extends boolean = false
  >(
    options?: OptionsLegacyParser<
      PostIdentityAccountResendConfirmationEmailData,
      ThrowOnError
    >
  ) {
    return (options?.client ?? client).post<
      PostIdentityAccountResendConfirmationEmailResponse,
      PostIdentityAccountResendConfirmationEmailError,
      ThrowOnError
    >({
      ...options,
      url: "/IdentityAccount/resendConfirmationEmail",
    });
  }

  public static postIdentityAccountForgotPassword<
    ThrowOnError extends boolean = false
  >(
    options?: OptionsLegacyParser<
      PostIdentityAccountForgotPasswordData,
      ThrowOnError
    >
  ) {
    return (options?.client ?? client).post<
      PostIdentityAccountForgotPasswordResponse,
      PostIdentityAccountForgotPasswordError,
      ThrowOnError
    >({
      ...options,
      url: "/IdentityAccount/forgotPassword",
    });
  }

  public static postIdentityAccountResetPassword<
    ThrowOnError extends boolean = false
  >(
    options?: OptionsLegacyParser<
      PostIdentityAccountResetPasswordData,
      ThrowOnError
    >
  ) {
    return (options?.client ?? client).post<
      PostIdentityAccountResetPasswordResponse,
      PostIdentityAccountResetPasswordError,
      ThrowOnError
    >({
      ...options,
      url: "/IdentityAccount/resetPassword",
    });
  }

  public static postIdentityAccountManage2Fa<
    ThrowOnError extends boolean = false
  >(
    options?: OptionsLegacyParser<
      PostIdentityAccountManage2FaData,
      ThrowOnError
    >
  ) {
    return (options?.client ?? client).post<
      PostIdentityAccountManage2FaResponse,
      PostIdentityAccountManage2FaError,
      ThrowOnError
    >({
      ...options,
      url: "/IdentityAccount/manage/2fa",
    });
  }

  public static getIdentityAccountManageInfo<
    ThrowOnError extends boolean = false
  >(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
    return (options?.client ?? client).get<
      GetIdentityAccountManageInfoResponse,
      GetIdentityAccountManageInfoError,
      ThrowOnError
    >({
      ...options,
      url: "/IdentityAccount/manage/info",
    });
  }

  public static postIdentityAccountManageInfo<
    ThrowOnError extends boolean = false
  >(
    options?: OptionsLegacyParser<
      PostIdentityAccountManageInfoData,
      ThrowOnError
    >
  ) {
    return (options?.client ?? client).post<
      PostIdentityAccountManageInfoResponse,
      PostIdentityAccountManageInfoError,
      ThrowOnError
    >({
      ...options,
      url: "/IdentityAccount/manage/info",
    });
  }
}

export class RoleManagerService {
  public static postRoleManagerAddRoleForEmailByEmail<
    ThrowOnError extends boolean = false
  >(
    options: OptionsLegacyParser<
      PostRoleManagerAddRoleForEmailByEmailData,
      ThrowOnError
    >
  ) {
    return (options?.client ?? client).post<
      PostRoleManagerAddRoleForEmailByEmailResponse,
      PostRoleManagerAddRoleForEmailByEmailError,
      ThrowOnError
    >({
      ...options,
      url: "/RoleManager/add-role-for-email/{email}",
    });
  }

  public static postRoleManagerAddRoleForUserByUserName<
    ThrowOnError extends boolean = false
  >(
    options: OptionsLegacyParser<
      PostRoleManagerAddRoleForUserByUserNameData,
      ThrowOnError
    >
  ) {
    return (options?.client ?? client).post<
      PostRoleManagerAddRoleForUserByUserNameResponse,
      PostRoleManagerAddRoleForUserByUserNameError,
      ThrowOnError
    >({
      ...options,
      url: "/RoleManager/add-role-for-user/{userName}",
    });
  }

  public static postRoleManagerCreateRole<ThrowOnError extends boolean = false>(
    options?: OptionsLegacyParser<PostRoleManagerCreateRoleData, ThrowOnError>
  ) {
    return (options?.client ?? client).post<
      PostRoleManagerCreateRoleResponse,
      PostRoleManagerCreateRoleError,
      ThrowOnError
    >({
      ...options,
      url: "/RoleManager/create-role",
    });
  }

  public static getRoleManagerGetRoles<ThrowOnError extends boolean = false>(
    options?: OptionsLegacyParser<unknown, ThrowOnError>
  ) {
    return (options?.client ?? client).get<
      GetRoleManagerGetRolesResponse,
      GetRoleManagerGetRolesError,
      ThrowOnError
    >({
      ...options,
      url: "/RoleManager/get-roles",
    });
  }

  public static getRoleManagerGetRoleForEmailByEmail<
    ThrowOnError extends boolean = false
  >(
    options: OptionsLegacyParser<
      GetRoleManagerGetRoleForEmailByEmailData,
      ThrowOnError
    >
  ) {
    return (options?.client ?? client).get<
      GetRoleManagerGetRoleForEmailByEmailResponse,
      GetRoleManagerGetRoleForEmailByEmailError,
      ThrowOnError
    >({
      ...options,
      url: "/RoleManager/get-role-for-email/{email}",
    });
  }

  public static getRoleManagerGetRoleForUserByUserName<
    ThrowOnError extends boolean = false
  >(
    options: OptionsLegacyParser<
      GetRoleManagerGetRoleForUserByUserNameData,
      ThrowOnError
    >
  ) {
    return (options?.client ?? client).get<
      GetRoleManagerGetRoleForUserByUserNameResponse,
      GetRoleManagerGetRoleForUserByUserNameError,
      ThrowOnError
    >({
      ...options,
      url: "/RoleManager/get-role-for-user/{userName}",
    });
  }

  public static getRoleManagerIsUserInRole<
    ThrowOnError extends boolean = false
  >(
    options?: OptionsLegacyParser<GetRoleManagerIsUserInRoleData, ThrowOnError>
  ) {
    return (options?.client ?? client).get<
      GetRoleManagerIsUserInRoleResponse,
      GetRoleManagerIsUserInRoleError,
      ThrowOnError
    >({
      ...options,
      url: "/RoleManager/is-user-in-role",
    });
  }

  public static getRoleManagerGetUserForRole<
    ThrowOnError extends boolean = false
  >(
    options?: OptionsLegacyParser<
      GetRoleManagerGetUserForRoleData,
      ThrowOnError
    >
  ) {
    return (options?.client ?? client).get<
      GetRoleManagerGetUserForRoleResponse,
      GetRoleManagerGetUserForRoleError,
      ThrowOnError
    >({
      ...options,
      url: "/RoleManager/get-user-for-role",
    });
  }

  public static postRoleManagerRemoveRoleForUserByUserName<
    ThrowOnError extends boolean = false
  >(
    options: OptionsLegacyParser<
      PostRoleManagerRemoveRoleForUserByUserNameData,
      ThrowOnError
    >
  ) {
    return (options?.client ?? client).post<
      PostRoleManagerRemoveRoleForUserByUserNameResponse,
      PostRoleManagerRemoveRoleForUserByUserNameError,
      ThrowOnError
    >({
      ...options,
      url: "/RoleManager/remove-role-for-user/{userName}",
    });
  }
}

export class UserInfoService {
  public static getUserInfoWhoAmI<ThrowOnError extends boolean = false>(
    options?: OptionsLegacyParser<unknown, ThrowOnError>
  ) {
    return (options?.client ?? client).get<
      GetUserInfoWhoAmIResponse,
      GetUserInfoWhoAmIError,
      ThrowOnError
    >({
      ...options,
      url: "/UserInfo/who-am-i",
    });
  }
}

export class UserManagerService {
  public static postUserManagerUserDetail<ThrowOnError extends boolean = false>(
    options?: OptionsLegacyParser<PostUserManagerUserDetailData, ThrowOnError>
  ) {
    return (options?.client ?? client).post<
      PostUserManagerUserDetailResponse,
      PostUserManagerUserDetailError,
      ThrowOnError
    >({
      ...options,
      url: "/UserManager/user-detail",
    });
  }

  public static postUserManagerCreateUser<ThrowOnError extends boolean = false>(
    options?: OptionsLegacyParser<PostUserManagerCreateUserData, ThrowOnError>
  ) {
    return (options?.client ?? client).post<
      PostUserManagerCreateUserResponse,
      PostUserManagerCreateUserError,
      ThrowOnError
    >({
      ...options,
      url: "/UserManager/create-user",
    });
  }

  public static getUserManagerListUsers<ThrowOnError extends boolean = false>(
    options?: OptionsLegacyParser<unknown, ThrowOnError>
  ) {
    return (options?.client ?? client).get<
      GetUserManagerListUsersResponse,
      GetUserManagerListUsersError,
      ThrowOnError
    >({
      ...options,
      url: "/UserManager/list-users",
    });
  }

  public static postUserManagerUpdateUser<ThrowOnError extends boolean = false>(
    options?: OptionsLegacyParser<PostUserManagerUpdateUserData, ThrowOnError>
  ) {
    return (options?.client ?? client).post<
      PostUserManagerUpdateUserResponse,
      PostUserManagerUpdateUserError,
      ThrowOnError
    >({
      ...options,
      url: "/UserManager/update-user",
    });
  }

  public static deleteUserManagerDeleteUser<
    ThrowOnError extends boolean = false
  >(
    options?: OptionsLegacyParser<DeleteUserManagerDeleteUserData, ThrowOnError>
  ) {
    return (options?.client ?? client).delete<
      DeleteUserManagerDeleteUserResponse,
      DeleteUserManagerDeleteUserError,
      ThrowOnError
    >({
      ...options,
      url: "/UserManager/delete-user",
    });
  }

  public static getUserManagerSignOut<ThrowOnError extends boolean = false>(
    options?: OptionsLegacyParser<unknown, ThrowOnError>
  ) {
    return (options?.client ?? client).get<
      GetUserManagerSignOutResponse,
      GetUserManagerSignOutError,
      ThrowOnError
    >({
      ...options,
      url: "/UserManager/sign-out",
    });
  }
}
